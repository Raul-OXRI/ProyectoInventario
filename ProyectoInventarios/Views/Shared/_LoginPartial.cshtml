@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar navbar-end">
    @if (SignInManager.IsSignedIn(User))

    {
        <li class="nav-item">
            <a class="btn btn-circle btn-success text-white text-xl"
               asp-area="Inventario"
               asp-controller="Carrito"
               asp-action="Index">
                <i class="bi bi-cart"></i>
            </a>
        </li>


        <li class="nav-item">
            <a class="btn btn-ghost normal-case text-xl text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @User.Identity?.Name <i class="fa-solid fa-user"></i>
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-ghost normal-case text-xl text-white">Logout</button>
            </form>
        </li>
    }

    else

    {
        <li class="nav-item">
            <a class="btn btn-ghost normal-case text-xl text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="btn btn-ghost normal-case text-xl text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

